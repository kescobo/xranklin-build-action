name: "Build website"

inputs:
  # SITE_FOLDER | if given and not empty, a folder path WITH
  #               a trailing backslash. This is the location
  #               of the source folder (e.g.: where the
  #               config.md is expected to be found)
  #               In general, this will be the repo itself and
  #               so doesn't have to be provided. But, as in the
  #               example below, it might be in a docs/ folder of
  #               a package
  # Example:
  #   SITE_FOLDER: "docs/"
  SITE_FOLDER:
    required: false
    default: ""
  # DEPLOY | if set to false, the script will only attempt to build
  #          the website but not place the generated files anywhere
  #          this can be used for testing
  DEPLOY:
    required: false
    default: true
  # BASE_URL_PREFIX | if given and not empty, the base URL prefix
  #                   for a project website WITHOUT backslash.
  #                   This indicates what the base path is, if
  #                   not given it's expected to be '/', if set
  #                   to 'foo', it's '/foo/'
  # Example
  #   BASE_URL_PREFIX: "Xranklin.jl"
  BASE_URL_PREFIX:
    required: false
    default: ""
  # PREVIEW | if given and not empty, adds to the BASE_URL_PREFIX
  #           it should NOT have a trailing backslash. This allows
  #           to have preview deployments with a separate path for
  #           testing
  # Example
  #   PREVIEW: "preview"
  PREVIEW:
    required: false
    default: ""
  # BRANCH | if given and not empty, the Xranklin branch to use
  # Example
  #   BRANCH: "dev"
  BRANCH:
    required: false
    default: "main"
  # PYTHON_LIBS | if given and not empty, the python3 libs to pip-install
  # Example
  #   PYTHON_LIBS: "matplotlib pandas"
  PYTHON_LIBS:
    required: false
    default: ""
  # PLOTS | if given and not empty, it should be 'xfvb-run'
  # Example
  #   PLOTS: "xfvb-run"
  PLOTS:
    required: false
    default: ""
  # LATEX | if given and not false, will install LaTeX dependencies
  # Example
  #   LATEX: true
  LATEX:
    required: false
    default: false
  # GNUPLOT | if given and not false, will install GnuPlot + deps
  # Example
  #   GNUPLOT: false
  GNUPLOT:
    required: false
    default: false
  # JULIA_PRE | if given and not empty, will pass the string as Julia
  #             code to run prior to building the website.
  #             For instance can be used to install specific packages.
  #             Be mindful of ticks usage and add a trailing ';' to
  #             **every** line. Do not add comments.
  # Example
  #   JULIA_PRE: 'using Pkg; Pkg.add("NodeJS");'
  JULIA_PRE:
    required: false
    default: ""
  # JULIA_POST | same as JULIA_PRE but applied after the build.
  # Example
  #   JULIA_POST: 'success(pipeline(`...`))'
  JULIA_POST:
    required: false
    default: ""
  # CLEAR_CACHE | if given and not false, force-clear the Xranklin cache
  # Example
  #   CLEAR_CACHE: true
  CLEAR_CACHE:
    required: false
    default: false
  # CACHE_KEY | if given and not empty, the key to use for the cache
  # Example
  #   CACHE_KEY: true
  CACHE_KEY:
    required: false
    default: "franklin-cache"
  # ONLY FOR XRANKLIN DEVELOPMENT PURPOSES, SHOULD NOT BE USED BY USER
  TTFX:
    required: false
    default: false

runs:
  using: "composite"
  steps:
    # =========== #
    # CACHE SETUP #
    # =========== #

    - uses: actions/cache@v3
      with:
        path: |
              ${{ inputs.SITE_FOLDER }}/__cache
              ${{ inputs.SITE_FOLDER }}/__site
        key: ${{ runner.os }}-${{ inputs.CACHE_KEY }}-${{ github.sha }}
        restore-keys: ${{ runner.os }}-${{ inputs.CACHE_KEY }}-

    # ============ #
    # DEPENDENCIES #
    # ============ #

    # Python
    - uses: actions/setup-python@v2
      with:
        python-version: 3.10
      if: inputs.PYTHON_LIBS != ''

    - run: '
           pip install ${{ inputs.PYTHON_LIBS }};
           export PYTHON=$(which python);
           '
      shell: bash
      if: ${{ inputs.PYTHON_LIBS != '' }}

    # Apt-get update if necessary
    - run: sudo apt-get update -qq
      shell: bash
      if: ${{ inputs.PLOTS != '' || inputs.LATEX == 'true' || inputs.GNUPLOT == 'true' }}

    # QT dependencies for Plots with GR backend
    - run: sudo apt-get install -y qt5-default
      shell: bash
      if: ${{ inputs.PLOTS != '' }}

    # LaTeX* deps for PGFPlotsX etc
    - run: sudo apt install -y pdf2svg texlive-latex-base texlive-binaries texlive-pictures texlive-latex-extra texlive-luatex
      shell: bash
      if: ${{ inputs.LATEX == 'true' }}

    # Gnuplot for Gaston etc
    - run: sudo apt-get install -y gnuplot
      shell: bash
      if: ${{ inputs.GNUPLOT == 'true' }}

    # ================ #
    # BUILDING WEBSITE #
    # ================ #

    # Julia
    - uses: julia-actions/setup-julia@v1
      with:
        version: 1.8

    # Building website
    - run: ${{ inputs.PLOTS }} julia -e '
              using Pkg;
              isempty("${{ inputs.PYTHON_LIBS }}") || (Pkg.add("PyCall"); Pkg.build("PyCall"););
              ${{ inputs.JULIA_PRE }};
              Pkg.add(
                url="https://github.com/tlienart/Xranklin.jl",
                rev="${{ inputs.BRANCH }}"
                );
              using Xranklin;
              build("${{ inputs.SITE_FOLDER }}";
                  clear=${{ inputs.CLEAR_CACHE }},
                  prefix=joinpath(
                      "${{ inputs.BASE_URL_PREFIX }}",
                      "${{ inputs.PREVIEW }}"
                  )
              );
              ${{ inputs.JULIA_POST }};'
      shell: bash

    # ============================ #
    # TTFX (only for Xranklin dev) #
    # ============================ #

    # TTFX Experiment results
    - uses: actions/checkout@v3
      with:
        ref: gh-ttfx
        path: ttfx
      if: ${{ (inputs.TTFX == 'true') && (inputs.DEPLOY == 'true') }}

    # OR pipe ensures continue on fail
    - run: '
           rm -rf ${{ inputs.SITE_FOLDER }}/__site/ttfx || true;
           mv ttfx/ttfx ${{ inputs.SITE_FOLDER }}/__site/. || true;
           '
      shell: bash
      if: ${{ inputs.TTFX == 'true' && (inputs.DEPLOY == 'true') }}

    # ========== #
    # DEPLOYMENT #
    # ========== #

    # Deployment
    - run: touch ${{ inputs.SITE_FOLDER }}__site/.nojekyll
      shell: bash
      if: ${{ inputs.DEPLOY == 'true' }}

    - uses: JamesIves/github-pages-deploy-action@releases/v4
      with:
        BRANCH: gh-pages
        FOLDER: ${{ inputs.SITE_FOLDER }}__site
        TARGET-FOLDER: "${{ inputs.PREVIEW }}"
      if: ${{ inputs.DEPLOY == 'true' }}